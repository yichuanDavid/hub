AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Lex Interceptor
Parameters:
  SourceBucket:
    Type: String
    Description: Bucket Lambda deployment packages (LexInterceptor_latest.zip and QrcodeDecoderLambda-1.0-SNAPSHOT-all.jar)
  FacebookVerifyToken:
    Type: String
    NoEcho: true
    Description: Facebook Verify Token
  FacebookPageToken:
    Type: String
    NoEcho: true
    Description: Facebook Page Token
  BotAlias:
    Type: String
    Default: $LATEST
    Description: AWS Lex Bot Alias
  BotName:
    Type: String
    Description: AWS Lex Bot Name
  GoogleApiKey:
    Type: String
    NoEcho: true
    Description: Google API Key that enabled Translation API and Speech API. (https://codelabs.developers.google.com/codelabs/cloud-speech-intro/index.html?index=..%2F..%2Findex#3)
  AllowedLanguages:
    Type: CommaDelimitedList
    Default: zh-TW,zh-HK,en
    Description: Google Translation API allowed Language Code values. If it detects something out of the list, it will use the first one for the reply translation. If it is in the list, it translates the reply with the detected language code.
  SpeechRecognizeLanguage:
    Type: String
    Default: yue-Hant-HK
    Description:  One Google Speech API Language Code for Voice to Text. ( https://cloud.google.com/speech/docs/languages )
  SynthesizeSpeechLanguageHints:
    Type: String
    Default: '{"zh":"zh-HK"}'
    Description: Json Object. For Polly unsupported language, synthesize speech hints help mapping the region language. For example, zh can map to zh-TW (Mandarin) or zh-HK (Cantonese). Set {"zh":"zh-HK"}, the system will use zh-HK for any zh related language.
  DynamodbAutoscaling:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: Enable DynamoDB AutoScaling
  DecodeQrcode:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: Enable Decode Qrcoede from image attachment.
Conditions:
  EnableDynamodbAutoscaling: !Equals [ !Ref DynamodbAutoscaling, true ]
  EnableDecodeQrcode: !Equals [ !Ref DecodeQrcode, true ]
Resources:
  DecodeQrcodeFunction:
    Type: AWS::Serverless::Function
    Condition: EnableDecodeQrcode
    Properties:
      Description: Decode Qrcode by sending in Url string.
      Handler: com.cloudlab.healthAi.qrcode.QrcodeHandler::handleRequest
      Runtime: java8
      MemorySize: 1024
      Timeout: 60
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AmazonRekognitionFullAccess
        - AWSLambdaExecute
        - AWSLambdaBasicExecutionRole
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: QrcodeDecoderLambda-1.0-SNAPSHOT-all.jar

  FacebookLexInterceptorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: facebookInterceptor.handler
      Runtime: nodejs6.10
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: LexInterceptor_latest.zip
      Description: Interceptor Facebook Request
      MemorySize: 512
      Timeout: 60
      Tracing: Active
      Policies:
        - AWSLambdaExecute # Managed Policy
        - AWSXrayWriteOnlyAccess
        - AmazonRekognitionFullAccess
        - AmazonDynamoDBFullAccess
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lex:PostText
              - polly:DescribeVoices
              - polly:SynthesizeSpeech
              Resource: "*"
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${SessionTable}
      Environment:
        Variables:
          QRCODE_FUNCTION: !If [EnableDecodeQrcode, !Ref DecodeQrcodeFunction, !Ref "AWS::NoValue"]
          PAGE_TOKEN: !Ref FacebookPageToken
          VERIFY_TOKEN: !Ref FacebookVerifyToken
          BOT_ALIAS: !Ref BotAlias
          BOT_NAME: !Ref BotName
          GOOGLE_API_KEY: !Ref GoogleApiKey
          ATTACHMENT_BUCKET: !Ref AttachmentBucket
          VOICE_BUCKET: !Ref VoiceBucket
          VOICE_SITE_URL:  !GetAtt VoiceBucket.WebsiteURL
          SESSION_TABLE_NAME : !Ref SessionTable
          IMAGE_TABLE: !Ref ImageTable
          ALLOWED_LANGUAGES: !Join [ ":", !Ref AllowedLanguages ]
          SPEECH_RECOGNIZE_LANGUAGE: !Ref SpeechRecognizeLanguage
          SYNTHESIZE_SPEECH_LANGUAGE_HINTS: !Ref SynthesizeSpeechLanguageHints
      Events:
        PostMessage:
          Type: Api
          Properties:
            Path: /
            Method: post
        GetMessage:
          Type: Api
          Properties:
            Path: /
            Method: get
  AttachmentBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private

  VoiceBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
  VoiceBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: VoiceBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref VoiceBucket
                - /*
      Bucket: !Ref VoiceBucket

  SessionTable:
    Type: AWS::Serverless::SimpleTable

  ImageTable:
    Type: AWS::Serverless::SimpleTable

# DynamoDB AutoScaling
  DynamoDBAutoscalingRole:
    Type: AWS::IAM::Role
    Condition: EnableDynamodbAutoscaling
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: lambdaIAMRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:UpdateTable
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
              - Effect: Allow
                Action:
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                Resource: "*"

  SessionDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${SessionTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  SessionDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref SessionDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  SessionDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${SessionTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  SessionDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref SessionDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  ImageDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${ImageTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  ImageDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ImageDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  ImageDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${ImageTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  ImageDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ImageDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

Outputs:
  FacebookWebhookUrl:
    Description: URL for Facebook Bot
    Value: !Join
      - ''
      - - https://
        - !Ref ServerlessRestApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod/'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: AWS
        Parameters:
          - SourceBucket
          - BotName
          - BotAlias
          - DynamodbAutoscaling
          - DecodeQrcode
      -
        Label:
          default: Google
        Parameters:
          - GoogleApiKey
          - AllowedLanguages
          - SpeechRecognizeLanguage
      -
        Label:
          default: ResponsiveVoice.JS
        Parameters:
          - SynthesizeSpeechLanguageHints
      -
        Label:
          default: Facebook
        Parameters:
          - FacebookPageToken
          - FacebookVerifyToken
    ParameterLabels:
      SourceBucket:
        default: Source Bucket
      BotName:
        default: Lex Bot Name
      BotAlias:
        default: Lex Bot Alias
      DynamodbAutoscaling:
        default: DynamoDB Autoscaling
      GoogleApiKey:
        default: Google Api Key
      AllowedLanguages:
        default: Google Translation Allowed Languages Code List
      SpeechRecognizeLanguage:
        default: Google Speech Recognize Language Code
      SynthesizeSpeechLanguageHints:
        default: Synthesize Speech Language Hints
      FacebookPageToken:
        default: Facebook Page Token
      FacebookVerifyToken:
        default: Facebook Verify Token
      DecodeQrcode:
        default: Decode QR code